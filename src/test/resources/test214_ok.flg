type abc = a | b | c

fun max(X: abc, Y: abc) : abc =
  match (X, Y) with
  | (c, _) | (_, c) => c
  | (b, _) | (_, b) => b
  | _ => a
  end
  
input bar(abc)
bar(a).
bar(b).
bar(c).

output foo(abc, abc<max,a>)
foo(X, X) :- bar(X).
foo(X, Y) :- bar(X), bar(Y). 

output not_ok
not_ok :- foo(X, Y), Y != c.
not_ok :- foo(a, a).
not_ok :- foo(a, b).
not_ok :- foo(b, a).
not_ok :- foo(b, b).
not_ok :- foo(c, a).
not_ok :- foo(c, b).

output ok
ok :- foo(a, c), foo(b, c), foo(c, c), !not_ok. 